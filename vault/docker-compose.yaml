# to remove persisted data
#  sudo rm -rf tmp/etcd*
version: "3"
services:
  etcd0:
    # https://github.com/etcd-io/etcd/releases
    # NOTE: newer images after etcd:v3.5.6 do not have /bin/sh anymore so we cannot use env vars,
    #       therefore we build our own image
    build: docker/etcd
    command:
      - /bin/sh
      - -c
      - etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://$$HOSTNAME:2379 --listen-client-urls http://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug
      #- etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls https://$$HOSTNAME:2379 --listen-client-urls https://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug --cert-file=/input/certs/etcd.pem --key-file=/input/certs/etcd-key.pem --trusted-ca-file=/input/certs/ca.pem --client-cert-auth --tls-min-version=TLS1.3
    ports:
      - 2379
    environment:
      - HOSTNAME=etcd0
      - CLUSTER=etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
      - ETCD_QUOTA_BACKEND_BYTES=${ETCD_QUOTA_BACKEND_BYTES:-5000000}
    volumes:
      - ./tmp:/etcd-data
      - ./:/input:ro

  etcd1:
    build: docker/etcd
    command:
      - /bin/sh
      - -c
      - etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://$$HOSTNAME:2379 --listen-client-urls http://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug
      #- etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls https://$$HOSTNAME:2379 --listen-client-urls https://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug --cert-file=/input/certs/etcd.pem --key-file=/input/certs/etcd-key.pem --trusted-ca-file=/input/certs/ca.pem --client-cert-auth --tls-min-version=TLS1.3
    ports:
      - 2379
    environment:
      - HOSTNAME=etcd1
      - CLUSTER=etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
      - ETCD_QUOTA_BACKEND_BYTES=${ETCD_QUOTA_BACKEND_BYTES:-5000000}
    volumes:
      - ./tmp:/etcd-data
      - ./:/input:ro

  etcd2:
    build: docker/etcd
    command:
      - /bin/sh
      - -c
      - etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://$$HOSTNAME:2379 --listen-client-urls http://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug
      #- etcd --data-dir /etcd-data/$$HOSTNAME --name $$HOSTNAME --initial-advertise-peer-urls http://$$HOSTNAME:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls https://$$HOSTNAME:2379 --listen-client-urls https://0.0.0.0:2379 --initial-cluster $$CLUSTER --log-level debug --cert-file=/input/certs/etcd.pem --key-file=/input/certs/etcd-key.pem --trusted-ca-file=/input/certs/ca.pem --client-cert-auth --tls-min-version=TLS1.3
    ports:
      - 2379
    environment:
      - HOSTNAME=etcd2
      - CLUSTER=etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
      - ETCD_QUOTA_BACKEND_BYTES=${ETCD_QUOTA_BACKEND_BYTES:-5000000}
    volumes:
      - ./tmp:/etcd-data
      - ./:/input:ro

  vscode:
    build: docker/vscode
    ports:
      - 8200:8200
    volumes:
      - ../../vault:/workspace:cached
      - .:/home/vscode/work/devenvs/vault


volumes:
  etcd-data:
