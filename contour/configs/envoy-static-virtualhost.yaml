admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  clusters:
  - name: mycluster
    type: STRICT_DNS
    connect_timeout: 5s
    load_assignment:
      cluster_name: mycluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8081
  listeners:
  - name: http
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
            - name: fileaccesslog
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /dev/stdout
                log_format:
                  text_format_source:
                    inline_string: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\" %REQ_WITHOUT_QUERY(X-ENVOY-ORIGINAL-PATH?:PATH)%\n"
                  formatters:
                    - name: envoy.formatter.req_without_query
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.formatter.regex_substitute.v3.RegexSubstituteConfig
                        command_name: REQ_WITHOUT_QUERY
                        regex_value_rewrite:
                          pattern:
                            google_re2: {}
                            regex: "^(/[^?]*).*$"
                          substitution: "\\1"
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: myroute
            virtual_hosts:
            - name: myupstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: mycluster
