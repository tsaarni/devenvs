apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver
    spec:
      containers:
      - name: echoserver
#        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20210922-cec7cf2
        image: local/echoserver:0.0
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TLS_SERVER_CERT
          value: /run/secrets/certs/tls.crt
        - name: TLS_SERVER_PRIVKEY
          value: /run/secrets/certs/tls.key
        - name: TLS_CLIENT_CACERTS
          value: /run/secret/trustanchors/ca.crt
        ports:
        - name: https-api
          containerPort: 8443
        volumeMounts:
          - mountPath: /run/secrets/certs/
            name: echoserver-cert
            readOnly: true
          - mountPath: /run/secret/trustanchors/
            name: client-root-ca
      volumes:
      - name: echoserver-cert
        secret:
          secretName: echoserver-cert
      - name: client-root-ca
        secret:
          secretName: internal-root-ca
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
spec:
  ports:
  - name: https
    port: 443
    targetPort: https-api
  selector:
    app.kubernetes.io/name: echoserver
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: protected
spec:
  virtualhost:
    fqdn: protected.127-0-0-101.nip.io
    tls:
      secretName: ingress
  routes:
    - services:
        - name: echoserver
          port: 443
          protocol: tls
          validation:
            subjectName: echoserver
            caSecret: internal-root-ca
      retryPolicy:
        retryOn:
          - reset
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: passthrough
spec:
  virtualhost:
    fqdn: passthrough.127-0-0-101.nip.io
    tls:
      passthrough: true
  tcpproxy:
    services:
    - name: echoserver
      port: 443
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: reencrypt
spec:
  virtualhost:
    fqdn: protected2.127-0-0-101.nip.io
    tls:
      secretName: ingress
  tcpproxy:
    services:
    - name: echoserver
      port: 443
      protocol: tls
      validation:
        subjectName: echoserver
        caSecret: internal-root-ca
