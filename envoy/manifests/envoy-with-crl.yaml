apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
spec:
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.27-latest
        ports:
        - containerPort: 8443
          hostPort: 443
        volumeMounts:
        - name: config
          mountPath: /etc/envoy
        - name: certs
          mountPath: /certs
        - name: crl
          mountPath: /crl
      - name: backend-service
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20210922-cec7cf2
        ports:
        - name: http-api
          containerPort: 3000
      volumes:
      - name: config
        configMap:
          name: envoy-config
      - name: certs
        secret:
          secretName: envoy-certs
      - name: crl
        secret:
          secretName: envoy-crl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 9901
    node:
      id: mynode
      cluster: mycluster
    static_resources:
      clusters:
      - name: mycluster
        type: STRICT_DNS
        connect_timeout: 5s
        load_assignment:
          cluster_name: mycluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 3000
      listeners:
      - name: http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8443
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
                - name: fileaccesslog
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: myroute
                virtual_hosts:
                - name: myupstream
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: mycluster
          transport_socket:
            name: "envoy.transport_sockets.tls"
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  name: tls_certificate_secret
                  sds_config:
                    path_config_source:
                      path: /etc/envoy/envoy-sds-auth-secret-tls-certificate.yaml
                validation_context_sds_secret_config:
                  name: validation_context_secret
                  sds_config:
                    path_config_source:
                      path: /etc/envoy/envoy-sds-auth-secret-validation-context.yaml
              require_client_certificate: true
  envoy-sds-auth-secret-tls-certificate.yaml: |
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: tls_certificate_secret
        tls_certificate:
          certificate_chain:
            filename: /certs/envoy.pem
          private_key:
            filename: /certs/envoy-key.pem
  envoy-sds-auth-secret-validation-context.yaml: |
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: validation_context_secret
        validation_context:
          trusted_ca:
            filename: /certs/client-ca.pem
          crl:
            filename: /crl/client-ca-crl.pem
